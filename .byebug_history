exit
create_html_file(response)
response
exit
array.count
exit
array
exit
array.first
array
exit
array[1]
array.first
array
exit
list
exit
end_time
start_time
(end_time - start_time).to_f
(end_time - start_time).to_i
end_time - start_time
exit
z.gsub("\\n","")
z.gsub("\n","")
z
exit
z.include? "nil"
z = line.gsub(" :", "\"").gsub("=>", "\": ").gsub("{:", "{\"")
JSON.parse(z)
z.gsub!("nil", "0")
z = line.gsub(" :", "\"").gsub("=>", "\": ").gsub("{:", "{\"")
JSON.parse(z)
z.gsub!("nil", "")
  z
JSON.parse(z)
z
line
exit
z = line.gsub(" :", "\"").gsub("=>", "\": ").gsub("{:", "{\"")
JSON.parse(z)
z = line.gsub(" :", "\"").gsub("=>", "\": ").gsub("{:", "{\"")
line.gsub(" :", "\"").gsub("=>", "\": ").gsub("{:", "{\"")
line
exit
string.each_line do |line|
string.each_line |line|
string = open("test.json").read
string = open("test.json")
y
continue
y
exit
JSON.parse(y)
y = string.gsub!(" :", "\"").gsub("=>", "\": ").gsub("{:", "{\"")
string = open("test.json").read
y = string.gsub!(" :", "\"").gsub("=>", "\": ").gsub("{:", "{\"")
y = string.gsub!(" :", "\"").gsub("=>", "\": ").gsub("{:", "\"")
string = open("test.json").read
y = string.gsub!(" :", "").gsub("=>", ": ").gsub("{:", "")
string = open("test.json").read
y = string.gsub!(" :", "").gsub("=>", ": ").gsub("{:", "")
y = string.gsub!(" :", "").gsub("=>", ": ").gsub("{:", ""})
y = string.gsub!(" :", "").gsub("=>", ": ").gsub("{:", ""}
y = string.gsub!(" :", "").gsub("=>", ": ")
string = open("test.json").read
JSON.parse(string)
string = open("test.json").read
JSON.parse(string)
string = open("test.json").read
JSON.parse(string)
string = open("test.json").read
exit
y = JSON.parse(y)
y = string.gsub!(":", "").gsub("=>", ": ")
string = open("test.json").read
string
y = string.gsub!(":", "")
y = string.gsub!(":", "").gsub("=>", ": ")
y = JSON.parse(y)
y = string.gsub!(":", "")
string
y = string.gsub!(" :", " ")
y = JSON.parse(string.gsub!(" :", " "))
y
y = JSON.parse(string.gsub(" :", " "))
y = JSON.parse(string.gsub(" :", " ")
y = JSON.parse(string)
data_hash = JSON.parse(file, :quirks_mode => true)
data_hash = JSON.parse(file)
file.to_json.class
file.class
file = File.read("test.json")
eval(y)
y = JSON.parse(string.to_json)
string = open("test.json").read
exit
z.class
z = eval(y)
eval(y)
JSON.parse(y)
y = JSON.parse(string.to_json)
JSON.parse(string.to_json)
JSON.parse(string.to_json).to_a
JSON.parse(string.to_json)
string.to_json
string
string = open("test.json").read
json.class
json
exit
JSON.parse(x.to_json)
x.to_json
x.to:json
JSON.parse(x)
x.class
exit
exot
JSON.parse x.gsub('=>', ':')
x
hash = eval(x)
JSON.parse(x)
x
x.class
